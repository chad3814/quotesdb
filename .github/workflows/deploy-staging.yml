name: Deploy to Staging

on:
  push:
    branches: [ develop ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
      env:
        DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}
        TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
        NEXTAUTH_SECRET: ${{ secrets.STAGING_NEXTAUTH_SECRET }}
        NEXTAUTH_URL: ${{ secrets.STAGING_NEXTAUTH_URL }}
    
    - name: Run database migrations
      run: npx prisma migrate deploy
      env:
        DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}
    
    - name: Update GitOps repo
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        
        # Clone the config repo
        git clone https://${{ secrets.GITOPS_TOKEN }}@github.com/${{ github.repository_owner }}/quotesdb-config.git config-repo
        cd config-repo
        
        # Update staging deployment with new image
        yq eval '.spec.template.spec.containers[0].image = "ghcr.io/${{ github.repository }}:${{ github.sha }}"' -i staging/deployment.yaml
        
        # Commit and push
        git add .
        git commit -m "Update staging deployment to ${{ github.sha }}"
        git push
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository }}:${{ github.sha }}
          ghcr.io/${{ github.repository }}:staging-latest
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}